name: Danish News Bot - Multiple Daily Runs

on:
  schedule:
    # –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ UTC (GitHub Actions —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ UTC)
    # –î–∞—Ç—Å–∫–æ–µ –≤—Ä–µ–º—è –ª–µ—Ç–æ–º (CEST = UTC+2): -2 —á–∞—Å–∞ –æ—Ç –¥–∞—Ç—Å–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    # –î–∞—Ç—Å–∫–æ–µ –≤—Ä–µ–º—è –∑–∏–º–æ–π (CET = UTC+1): -1 —á–∞—Å –æ—Ç –¥–∞—Ç—Å–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    - cron: '30 5 * * *'   # 05:30 UTC = 07:30 –¥–∞—Ç—Å–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ (–ª–µ—Ç–æ–º)
    - cron: '30 7 * * *'   # 07:30 UTC = 09:30 –¥–∞—Ç—Å–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ (–ª–µ—Ç–æ–º)
    - cron: '0 10 * * *'   # 10:00 UTC = 12:00 –¥–∞—Ç—Å–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ (–ª–µ—Ç–æ–º)
    - cron: '0 11 * * *'   # 11:00 UTC = 12:00 –¥–∞—Ç—Å–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ (–ª–µ—Ç–æ–º)
    - cron: '0 12 * * *'   # 12:00 UTC = 14:00 –¥–∞—Ç—Å–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ (–ª–µ—Ç–æ–º)
    - cron: '0 14 * * *'   # 14:00 UTC = 16:00 –¥–∞—Ç—Å–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ (–ª–µ—Ç–æ–º)
    - cron: '0 17 * * *'   # 17:00 UTC = 19:00 –¥–∞—Ç—Å–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ (–ª–µ—Ç–æ–º)
    - cron: '0 18 * * *'   # 18:00 UTC = 20:00 –¥–∞—Ç—Å–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ (–ª–µ—Ç–æ–º)
    - cron: '0 19 * * *'   # 19:00 UTC = 21:00 –¥–∞—Ç—Å–∫–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ (–ª–µ—Ç–æ–º)
  workflow_dispatch: # –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

env:
  GO_VERSION: '1.23'

jobs:
  send-single-news:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Debug environment
      run: |
        echo "üìã Environment Debug:"
        echo "- Go version: $(go version)"
        echo "- Working directory: $(pwd)"
        echo "- GOPATH: $GOPATH"
        echo "- GOMOD: $GOMOD"
        echo "- GO111MODULE: $GO111MODULE"
        echo "- Files in current directory:"
        ls -la
        echo "- Content of go.mod:"
        cat go.mod
        echo "- Go env:"
        go env GOMOD GOPATH GOPROXY GO111MODULE

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Initialize Go module
      run: |
        echo "üîß Initializing Go module context..."
        export GO111MODULE=on
        echo "- Current module: $(go list -m)"
        echo "- Module directory check:"
        go list -m -f '{{.Dir}}' || echo "Module dir not found"
        echo "- Module packages:"
        go list ./... || echo "Failed to list packages"

    - name: Download dependencies
      run: |
        echo "üì¶ Downloading Go modules..."
        export GO111MODULE=on
        go clean -modcache || true
        go mod download
        go mod tidy
        go mod verify
        echo "‚úÖ Dependencies ready"
        echo "- Module list:"
        go list -m all | head -5

    - name: Build application
      run: |
        echo "üî® Building application..."
        export GO111MODULE=on
        echo "üìÅ Working directory: $(pwd)"
        echo "üìÑ Module info: $(go list -m)"
        echo "üì¶ Available packages:"
        go list ./internal/... || echo "Failed to list internal packages"
        mkdir -p bin
        go build -v -x -o bin/dknews .
        echo "‚úÖ Build completed successfully"
        ls -la bin/

    - name: Run news bot (single news mode)
      env:
        TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        BOT_MODE: single
        DEBUG: false
        GO111MODULE: on
      run: |
        echo "üöÄ Starting Danish News Bot at $(date)"
        echo "üìÖ Current time UTC: $(date -u)"
        echo "üá©üá∞ Danish time: $(TZ='Europe/Copenhagen' date)"
        echo "üéØ Target chat: $TELEGRAM_CHAT_ID"
        echo "ü§ñ Bot mode: $BOT_MODE"
        if [ -z "$GEMINI_API_KEY" ]; then echo '‚ùå GEMINI_API_KEY missing'; exit 1; fi
        if [ -z "$TELEGRAM_TOKEN" ]; then echo '‚ùå TELEGRAM_TOKEN missing'; exit 1; fi
        if [ -z "$TELEGRAM_CHAT_ID" ]; then echo '‚ùå TELEGRAM_CHAT_ID missing'; exit 1; fi
        echo "üèÉ Running bot..."
        ./bin/dknews

    - name: Check for errors
      if: failure()
      run: |
        echo "‚ùå Job failed at $(date)"
        echo "üìã Environment check:"
        echo "- Go version: $(go version)"
        echo "- Working directory: $(pwd)"
        echo "- Files: $(ls -la)"
        echo "- Go mod status: $(head -5 go.mod)"
        echo "- Module list: $(go list -m all | head -10)"
        echo "- GOMOD path: $(go env GOMOD)"
        echo "- Built binary exists: $(ls -la bin/ || echo 'No bin directory')"
